@use "sass:map";
@use "@angular/material" as mat;

@use "./styles/themes/light" as light-theme;
@use "./styles/typography/config" as typography;


// Angular Material defines a mixin named core that includes prerequisite styles for common features used by multiple components, such as ripples. 
// The core mixin must be included exactly once for your application, even if you define multiple themes. 
// Including the core mixin multiple times will result in duplicate CSS in your application.
@include mat.core();

// Include the core theme and any additional component themes. Eg. @include mat.button-theme(light.$light-theme);
@include mat.core-theme(light-theme.$light-theme);

// Workaround to the problem applying typographies globally. Unecessary loading of all available themes and typographies
@include mat.all-component-themes(light-theme.$light-theme);
//@include mat.all-component-typographies(typography.$app-typography);
$color-config:    mat.get-color-config(light-theme.$light-theme);
$primary-palette: map.get($color-config, 'primary');
$accent-palette:  map.get($color-config, 'accent');
$warn-palette:    map.get($color-config, 'warn');

// Use this method to apply specific themes and typographies to individual components instead of loading all like above.
// If you define the typography for the theme while defining it, you don't to include mat.'component'-typography
//@include mat.button-theme(light-theme.$light-theme);
//@include mat.button-typography(typography.$app-typography);

// Font Awesome
@import "@fortawesome/fontawesome-free/scss/fontawesome.scss";
@import "@fortawesome/fontawesome-free/scss/solid.scss";
@import "@fortawesome/fontawesome-free/scss/regular.scss";
@import "@fortawesome/fontawesome-free/scss/brands.scss";

// Flaticons as fonts
@import './assets/scss/modules/icon';

// MDB SCSS
//@import "mdb-angular-ui-kit/assets/scss/mdb.scss";

// Gallery Lightbox
@import "@angular/cdk/overlay-prebuilt.css";


.nav-title {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.nav-items {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}
.nav-items > * {
  color: mat.get-color-from-palette($primary-palette, '500-contrast') !important;
  margin: 0px 5px 0px 0px;
  @include mat.elevation-transition();
  @include mat.elevation(1);
}
.nav-button {
    @include mat.elevation(6);
}
.nav-row {
  display: flex;
  flex: 0 0 100%;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.small-nav-row {
  display: flex;
  width: 100%;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.remove-flex {
  flex: 0 0 auto !important; 
}
.user-arrow {
  display: flex;
  align-items: flex-end;
  margin-left: -8px !important;
  margin-bottom: -2px !important;
}
.nav-dropdown {
  display: flex;
  align-items: center;
}
#userImg {
  width: 100% !important;
  max-width: 100% !important;  
  height: auto !important;  
  border-radius: 50%;
  @include mat.elevation-transition();
  @include mat.elevation(1);
}
#userImg:hover {
  @include mat.elevation(6);
  cursor: pointer;
}
.nav-button-display {
  @include mat.elevation-transition();
  @include mat.elevation(1);
}
.nav-button-display:hover {
  @include mat.elevation(6);
  cursor: pointer;
}
// #stage-icon {
//   border-radius: 50%;
// }
// #concert-icon {
//   border-radius: 50%;
// }
#heart-icon {
  color: #f953a9;
  transform: scale(1.4);
}
#message-icon {
  // font-size: 40px;
  // vertical-align: middle !important;
  // border: none;
  position: absolute !important;
  top: 50% !important;
  right: 50% !important;
  transform: translate(50%, -50%) scale(2) !important;
}
.icon-display {
  transform: scale(2);
  border-radius: 50%;
  border: none !important;
  @include mat.elevation-transition();
  @include mat.elevation(1);
}
.icon-display:hover {
  @include mat.elevation(6);
  cursor: pointer;
}
.elevate-icon {
  @include mat.elevation-transition();
  @include mat.elevation(1);
}
.elevate-icon:hover {
  @include mat.elevation(6);
  cursor: pointer;
}
.mat-sidenav-content-gray {
  transition: background 300ms ease-in 200ms;
  background: url(../src/assets/backgrounds/gray-background.svg);
  width: 100%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
}
.mat-sidenav-content-wave {
  transition: background 300ms ease-in 200ms;
  background: url(../src/assets/backgrounds/wave-background.svg);
  width: 100%;
  background-repeat: no-repeat;
  background-size: 100% 100%;
}
.user-icon-container {
  display: flex;
}
// #nav-toolbar-row {
//   padding-right: 32px !important;
//   margin-right: 12px !important;
// }


// .custom-svg-icon > mat-icon > svg {
//   height: 24px !important;
//   width: 24px !important;
//   font-size: 24px !important;
// }


/*
.tab-panel {
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 4px;
  }
  
  .nav-tabs > li.open, .member-tabset > .nav-tabs > li:hover {
    border-bottom: 4px solid #fbcdcf;
  }
  
  .member-tabset > .nav-tabs > li.open > a, .member-tabset > .nav-tabs > li:hover > a {
    border: 0;
    background: none !important;
    color: #333333;
  }
  
  .member-tabset > .nav-tabs > li.open > a > i, .member-tabset > .nav-tabs > li:hover > a > i {
    color: #a6a6a6;
  }
  
  .member-tabset > .nav-tabs > li.open .dropdown-menu, .member-tabset > .nav-tabs > li:hover .dropdown-menu {
    margin-top: 0px;
  }
  
  .member-tabset > .nav-tabs > li.active {
    border-bottom: 4px solid #E95420;
    position: relative;
  }
  
  .member-tabset > .nav-tabs > li.active > a {
    border: 0 !important;
    color: #333333;
  }
  
  .member-tabset > .nav-tabs > li.active > a > i {
    color: #404040;
  }
  
  .member-tabset > .tab-content {
    margin-top: -3px;
    background-color: #fff;
    border: 0;
    border-top: 1px solid #eee;
    padding: 15px 0;
  }

  .nav-spacer {
    flex: 1 1 auto;
  }
  */