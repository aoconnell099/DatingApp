@use "sass:map";
@use "@angular/material" as mat;

@use "./styles/themes/light" as light-theme;
@use "./styles/typography/config" as typography;


// Angular Material defines a mixin named core that includes prerequisite styles for common features used by multiple components, such as ripples. 
// The core mixin must be included exactly once for your application, even if you define multiple themes. 
// Including the core mixin multiple times will result in duplicate CSS in your application.
@include mat.core();

//@import './styles/themes/light';

@import './app/members/member-card/member-card.component.scss';
@import './app/members/member-list/member-list.component.scss';
@import './app/concerts/concert-home/concert-home.component.scss';

// Include the core theme and any additional component themes. Eg. @include mat.button-theme(light.$light-theme);
@include mat.core-theme(light-theme.$light-theme);

// Workaround to the problem applying typographies globally. Unecessary loading of all available themes and typographies
@include mat.all-component-themes(light-theme.$light-theme);
//@include mat.all-component-typographies(typography.$app-typography);
$color-config:    mat.get-color-config(light-theme.$light-theme);
$primary-palette: map.get($color-config, 'primary');
$accent-palette:  map.get($color-config, 'accent');
$warn-palette:    map.get($color-config, 'warn');


//$accent-color: mat-color($accent-palette, 300);

@mixin custom-components-theme($theme) {
  @include card-color($theme);
  @include filter-button-background($theme);
  @include tab-color($theme);
}
@include custom-components-theme(light-theme.$light-theme);

// @include card-color(light-theme.$light-theme);
//   @include filter-button-background($theme);

// .light-theme {
//   //@include angular-material-theme(light-theme.$light-theme);

//   @include custom-components-theme(light-theme.$light-theme);
// }

// Use this method to apply specific themes and typographies to individual components instead of loading all like above.
// If you define the typography for the theme while defining it, you don't to include mat.'component'-typography
//@include mat.button-theme(light-theme.$light-theme);
//@include mat.button-typography(typography.$app-typography);

// Font Awesome
@import "@fortawesome/fontawesome-free/scss/fontawesome.scss";
@import "@fortawesome/fontawesome-free/scss/solid.scss";
@import "@fortawesome/fontawesome-free/scss/regular.scss";
@import "@fortawesome/fontawesome-free/scss/brands.scss";

// Flaticons as fonts
@import './assets/scss/modules/icon';

// Custom fonts
@import './styles/typography/custom-fonts';

// MDB SCSS
//@import "mdb-angular-ui-kit/assets/scss/mdb.scss";

// Gallery Lightbox
@import "@angular/cdk/overlay-prebuilt.css";

// Navbar stylesheet
@import "./styles/nav-styles.scss";

body {
  overflow: hidden !important;
}

.mat-mdc-menu-content {
  line-height: normal !important;
}
.mat-mdc-menu-item {
  line-height: normal !important;
}
.mdc-list-item__primary-text {
  line-height: normal !important;
}
.concert-dialog {
//   mat-dialog-container {
//     padding: 0;
//     background-color: transparent;
// }
display: flex;
flex-direction: column;
.mdc-dialog__surface {
  background-color: transparent !important;
  box-shadow: none !important;
  //border-radius: 20px;
}
.mdc-dialog__content {
  padding: 0 !important;
  overflow: hidden !important;
  // min-height: 80vh;
  max-height: 95vh !important;
  flex-grow: 1;
  //overflow: auto;
  
}

}
// .mat-mdc-dialog-surface {
//   background: transparent;
// }
/*
.tab-panel {
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 4px;
  }
  
  .nav-tabs > li.open, .member-tabset > .nav-tabs > li:hover {
    border-bottom: 4px solid #fbcdcf;
  }
  
  .member-tabset > .nav-tabs > li.open > a, .member-tabset > .nav-tabs > li:hover > a {
    border: 0;
    background: none !important;
    color: #333333;
  }
  
  .member-tabset > .nav-tabs > li.open > a > i, .member-tabset > .nav-tabs > li:hover > a > i {
    color: #a6a6a6;
  }
  
  .member-tabset > .nav-tabs > li.open .dropdown-menu, .member-tabset > .nav-tabs > li:hover .dropdown-menu {
    margin-top: 0px;
  }
  
  .member-tabset > .nav-tabs > li.active {
    border-bottom: 4px solid #E95420;
    position: relative;
  }
  
  .member-tabset > .nav-tabs > li.active > a {
    border: 0 !important;
    color: #333333;
  }
  
  .member-tabset > .nav-tabs > li.active > a > i {
    color: #404040;
  }
  
  .member-tabset > .tab-content {
    margin-top: -3px;
    background-color: #fff;
    border: 0;
    border-top: 1px solid #eee;
    padding: 15px 0;
  }

  .nav-spacer {
    flex: 1 1 auto;
  }
  */