@use "sass:map";
@use "@angular/material" as mat;

@use "./styles/themes/light" as light-theme;
@use "./styles/themes/light_green" as light-green;
@use "./styles/typography/config" as typography;

@import 'swiper/scss';
@import 'swiper/scss/autoplay';
@import 'swiper/scss/keyboard';
@import 'swiper/scss/pagination';
@import 'swiper/scss/scrollbar';
@import 'swiper/scss/zoom';
@import '@ionic/angular/css/ionic-swiper';


// Angular Material defines a mixin named core that includes prerequisite styles for common features used by multiple components, such as ripples. 
// The core mixin must be included exactly once for your application, even if you define multiple themes. 
// Including the core mixin multiple times will result in duplicate CSS in your application.
@include mat.core();

//@import './styles/themes/light';

// @import './app/members/member-card/member-card.component.scss';
// @import './app/members/member-list/member-list.component.scss';
//@import './app/members/ionic-member-card/ionic-member-card.component.scss';
@import './app/members/ionic-member-list/ionic-member-list.component.scss';
@import './app/concerts/concert-home/concert-home.component.scss';
@import './styles/mixins/cards';

// Include the core theme and any additional component themes. Eg. @include mat.button-theme(light.$light-theme);
// @include mat.core-theme(light-theme.$light-theme);
//@include mat.core-theme(light-green.$light-theme);

// Workaround to the problem applying typographies globally. Unecessary loading of all available themes and typographies
// @include mat.all-component-themes(light-theme.$light-theme);
@include mat.all-component-themes(light-green.$light-theme);
//@include mat.all-component-typographies(typography.$app-typography);
// $color-config:    mat.get-color-config(light-theme.$light-theme);
// $color-config:    mat.get-color-config(light-green.$light-theme);
// $primary-palette: map.get($color-config, 'primary');
// $accent-palette:  map.get($color-config, 'accent');
// $warn-palette:    map.get($color-config, 'warn');


//$accent-color: mat-color($accent-palette, 300);

@mixin custom-components-theme($theme) {
  @include user-card($theme);
  @include filter-button-background($theme);
  @include tab-color($theme);
  @include nav($theme);
  @include filter($theme);
  @include concert-buttons($theme);
  @include search-form($theme);
  @include search-list($theme);
  @include messages($theme);
}
@include custom-components-theme(light-green.$light-theme);
//@include custom-components-theme(light-green.$light-theme);

// @include card-color(light-theme.$light-theme);
//   @include filter-button-background($theme);

// .light-theme {
//   //@include angular-material-theme(light-theme.$light-theme);

//   @include custom-components-theme(light-theme.$light-theme);
// }

// Use this method to apply specific themes and typographies to individual components instead of loading all like above.
// If you define the typography for the theme while defining it, you don't to include mat.'component'-typography
//@include mat.button-theme(light-theme.$light-theme);
//@include mat.button-typography(typography.$app-typography);

// Font Awesome
@import "@fortawesome/fontawesome-free/scss/fontawesome.scss";
@import "@fortawesome/fontawesome-free/scss/solid.scss";
@import "@fortawesome/fontawesome-free/scss/regular.scss";
@import "@fortawesome/fontawesome-free/scss/brands.scss";

// Flaticons as fonts
@import './assets/scss/modules/icon';

// Custom fonts
@import './styles/typography/custom-fonts';

// MDB SCSS
//@import "mdb-angular-ui-kit/assets/scss/mdb.scss";

// Gallery Lightbox
@import "@angular/cdk/overlay-prebuilt.css";

// Navbar stylesheet
@import "./styles/nav-styles.scss";

body {
  overflow: hidden !important;
}

* {
  font-family: 'Raleway';
}

.mat-mdc-menu-content {
  line-height: normal !important;
}
.mat-mdc-menu-item {
  line-height: normal !important;
}
.mdc-list-item__primary-text {
  line-height: normal !important;
}
.concert-dialog {
//   mat-dialog-container {
//     padding: 0;
//     background-color: transparent;
// }
display: flex;
flex-direction: column;
.mdc-dialog__surface {
  background-color: transparent !important;
  box-shadow: none !important;
  //border-radius: 20px;
}
.mdc-dialog__content {
  padding: 0 !important;
  overflow: hidden !important;
  // min-height: 80vh;
  max-height: 95vh !important;
  flex-grow: 1;
  //overflow: auto;
  
}

}
.light {
  --md-sys-color-primary: rgb(133 75 113);
  --md-sys-color-surface-tint: rgb(133 75 113);
  --md-sys-color-on-primary: rgb(255 255 255);
  --md-sys-color-primary-container: rgb(255 216 237);
  --md-sys-color-on-primary-container: rgb(54 7 43);
  --md-sys-color-secondary: rgb(112 87 102);
  --md-sys-color-on-secondary: rgb(255 255 255);
  --md-sys-color-secondary-container: rgb(251 218 235);
  --md-sys-color-on-secondary-container: rgb(40 22 34);
  --md-sys-color-tertiary: rgb(128 84 63);
  --md-sys-color-on-tertiary: rgb(255 255 255);
  --md-sys-color-tertiary-container: rgb(255 219 204);
  --md-sys-color-on-tertiary-container: rgb(49 19 4);
  --md-sys-color-error: rgb(186 26 26);
  --md-sys-color-on-error: rgb(255 255 255);
  --md-sys-color-error-container: rgb(255 218 214);
  --md-sys-color-on-error-container: rgb(65 0 2);
  --md-sys-color-background: rgb(255 248 249);
  --md-sys-color-on-background: rgb(33 26 29);
  --md-sys-color-surface: rgb(255 248 249);
  --md-sys-color-on-surface: rgb(33 26 29);
  --md-sys-color-surface-variant: rgb(239 222 229);
  --md-sys-color-on-surface-variant: rgb(79 68 74);
  --md-sys-color-outline: rgb(129 115 122);
  --md-sys-color-outline-variant: rgb(211 194 201);
  --md-sys-color-shadow: rgb(0 0 0);
  --md-sys-color-scrim: rgb(0 0 0);
  --md-sys-color-inverse-surface: rgb(54 46 50);
  --md-sys-color-inverse-on-surface: rgb(251 237 242);
  --md-sys-color-inverse-primary: rgb(248 177 221);
  --md-sys-color-primary-fixed: rgb(255 216 237);
  --md-sys-color-on-primary-fixed: rgb(54 7 43);
  --md-sys-color-primary-fixed-dim: rgb(248 177 221);
  --md-sys-color-on-primary-fixed-variant: rgb(106 52 89);
  --md-sys-color-secondary-fixed: rgb(251 218 235);
  --md-sys-color-on-secondary-fixed: rgb(40 22 34);
  --md-sys-color-secondary-fixed-dim: rgb(221 190 207);
  --md-sys-color-on-secondary-fixed-variant: rgb(87 64 78);
  --md-sys-color-tertiary-fixed: rgb(255 219 204);
  --md-sys-color-on-tertiary-fixed: rgb(49 19 4);
  --md-sys-color-tertiary-fixed-dim: rgb(244 185 159);
  --md-sys-color-on-tertiary-fixed-variant: rgb(101 61 41);
  --md-sys-color-surface-dim: rgb(228 214 220);
  --md-sys-color-surface-bright: rgb(255 248 249);
  --md-sys-color-surface-container-lowest: rgb(255 255 255);
  --md-sys-color-surface-container-low: rgb(254 240 245);
  --md-sys-color-surface-container: rgb(248 234 240);
  --md-sys-color-surface-container-high: rgb(243 229 234);
  --md-sys-color-surface-container-highest: rgb(237 223 228);
}
// .mat-mdc-dialog-surface {
//   background: transparent;
// }
/*
.tab-panel {
    border: 1px solid #ddd;
    padding: 10px;
    border-radius: 4px;
  }
  
  .nav-tabs > li.open, .member-tabset > .nav-tabs > li:hover {
    border-bottom: 4px solid #fbcdcf;
  }
  
  .member-tabset > .nav-tabs > li.open > a, .member-tabset > .nav-tabs > li:hover > a {
    border: 0;
    background: none !important;
    color: #333333;
  }
  
  .member-tabset > .nav-tabs > li.open > a > i, .member-tabset > .nav-tabs > li:hover > a > i {
    color: #a6a6a6;
  }
  
  .member-tabset > .nav-tabs > li.open .dropdown-menu, .member-tabset > .nav-tabs > li:hover .dropdown-menu {
    margin-top: 0px;
  }
  
  .member-tabset > .nav-tabs > li.active {
    border-bottom: 4px solid #E95420;
    position: relative;
  }
  
  .member-tabset > .nav-tabs > li.active > a {
    border: 0 !important;
    color: #333333;
  }
  
  .member-tabset > .nav-tabs > li.active > a > i {
    color: #404040;
  }
  
  .member-tabset > .tab-content {
    margin-top: -3px;
    background-color: #fff;
    border: 0;
    border-top: 1px solid #eee;
    padding: 15px 0;
  }

  .nav-spacer {
    flex: 1 1 auto;
  }
  */